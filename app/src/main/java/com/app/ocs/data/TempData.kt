package com.app.ocs.data

import android.content.Context
import com.google.gson.Gson
import kotlin.math.roundToInt

object TempData {


    val frontCardData = """{
        "BL_corner": 2,
        "BR_corner": 2,
        "Bottom centering": "",
        "Card ID": "235143543122",
        "Defects": "{'Blemish': [[453, 535, 453, 542, 454, 543, 454, 544, 462, 544, 462, 537, 461, 537, 459, 535], [456, 493, 455, 494, 450, 494, 448, 496, 447, 495, 447, 494, 441, 494, 441, 495, 440, 496, 440, 499, 438, 501, 437, 501, 436, 502, 436, 508, 438, 510, 439, 510, 440, 511, 445, 511, 447, 509, 447, 507, 449, 505, 451, 505, 452, 506, 454, 506, 454, 500, 455, 499, 456, 500, 457, 500, 458, 501, 458, 509, 459, 510, 466, 510, 466, 509, 467, 508, 469, 508, 469, 504, 468, 504, 467, 503, 467, 499, 464, 499, 462, 497, 462, 496, 460, 496, 459, 495, 459, 494, 458, 493], [356, 493, 355, 494, 355, 501, 358, 504, 358, 506, 359, 507, 359, 511, 361, 513, 361, 516, 369, 516, 370, 517, 370, 518, 374, 518, 374, 515, 375, 514, 375, 513, 377, 511, 378, 511, 379, 512, 379, 513, 380, 514, 380, 521, 377, 524, 377, 525, 376, 526, 376, 531, 379, 531, 381, 533, 381, 534, 382, 535, 382, 536, 384, 536, 387, 539, 389, 539, 391, 541, 399, 541, 404, 536, 405, 536, 405, 535, 406, 534, 406, 533, 408, 531, 409, 531, 409, 524, 407, 522, 403, 522, 398, 517, 398, 516, 395, 513, 395, 511, 396, 510, 397, 510, 398, 511, 399, 511, 401, 513, 407, 513, 409, 511, 411, 513, 415, 513, 418, 510, 418, 504, 417, 504, 416, 503, 416, 502, 415, 501, 413, 501, 412, 502, 412, 504, 410, 506, 406, 502, 407, 501, 407, 496, 406, 495, 406, 494, 405, 493, 403, 493, 402, 494, 402, 495, 400, 497, 398, 497, 397, 498, 397, 500, 396, 501, 396, 503, 395, 504, 387, 504, 387, 505, 386, 506, 384, 504, 384, 503, 383, 502, 383, 501, 382, 501, 380, 499, 380, 498, 378, 496, 376, 496, 373, 499, 362, 499, 360, 497, 360, 496, 359, 495, 359, 494, 358, 493], [189, 478, 189, 479, 187, 481, 187, 486, 188, 487, 192, 487, 193, 486, 194, 487, 196, 487, 197, 488, 197, 490, 198, 490, 199, 491, 199, 492, 201, 494, 201, 496, 202, 497, 202, 500, 205, 503, 209, 503, 210, 502, 212, 502, 212, 491, 210, 491, 208, 489, 207, 489, 204, 486, 202, 486, 201, 485, 200, 485, 199, 484, 199, 483, 198, 483, 197, 482, 197, 479, 196, 479, 195, 478], [375, 470, 374, 471, 374, 474, 378, 474, 378, 471, 377, 470], [324, 466, 322, 468, 320, 468, 317, 471, 316, 470, 314, 470, 313, 471, 304, 471, 302, 473, 298, 473, 298, 480, 315, 480, 316, 479, 322, 479, 323, 478, 324, 479, 325, 479, 328, 482, 329, 482, 332, 485, 334, 485, 335, 486, 335, 487, 339, 487, 339, 486, 340, 485, 343, 485, 344, 484, 347, 484, 349, 482, 354, 482, 355, 481, 356, 481, 357, 482, 363, 482, 365, 480, 365, 479, 367, 477, 368, 477, 371, 474, 372, 474, 372, 470, 371, 469, 371, 467, 370, 466, 366, 466, 364, 468, 346, 468, 344, 466, 333, 466, 331, 468, 329, 466], [416, 464, 413, 467, 413, 469, 411, 471, 411, 473, 410, 474, 410, 476, 411, 477, 419, 477, 421, 479, 428, 479, 429, 478, 429, 476, 430, 475, 430, 468, 428, 466, 427, 466, 426, 465, 422, 465, 421, 464], [472, 460, 471, 461, 471, 463, 466, 468, 466, 469, 465, 470, 463, 470, 462, 469, 462, 468, 456, 468, 456, 469, 454, 471, 453, 471, 453, 474, 456, 477, 456, 479, 457, 480, 459, 480, 460, 479, 461, 479, 461, 478, 462, 477, 462, 476, 463, 475, 464, 476, 464, 478, 465, 479, 465, 480, 466, 481, 466, 483, 465, 484, 464, 484, 464, 489, 466, 489, 467, 490, 467, 492, 469, 492, 470, 493, 470, 494, 471, 495, 471, 496, 472, 497, 472, 505, 473, 506, 473, 507, 477, 507, 477, 501, 476, 500, 476, 491, 477, 490, 480, 493, 480, 494, 481, 495, 479, 497, 479, 500, 483, 500, 483, 497, 482, 496, 483, 495, 484, 495, 484, 490, 483, 489, 483, 488, 482, 487, 482, 484, 484, 482, 485, 482, 487, 480, 490, 480, 492, 478, 492, 474, 493, 473, 493, 465, 491, 463, 490, 463, 488, 461, 487, 461, 486, 460, 481, 460, 480, 461, 479, 460], [566, 437, 565, 438, 565, 441, 569, 441, 569, 438, 568, 437], [303, 183, 302, 184, 302, 185, 301, 186, 299, 186, 299, 187, 297, 189, 297, 195, 307, 195, 307, 194, 308, 193, 308, 186, 307, 186, 306, 185, 306, 184, 305, 183], [353, 173, 352, 174, 351, 174, 351, 185, 353, 185, 355, 187, 360, 187, 361, 188, 368, 188, 369, 187, 372, 187, 372, 176, 369, 176, 367, 174, 362, 174, 361, 173], [282, 116, 281, 117, 278, 117, 278, 123, 285, 123, 285, 117, 284, 116], [129, 94, 127, 96, 126, 96, 126, 100, 128, 102, 132, 102, 132, 94], [296, 75, 295, 76, 295, 77, 294, 78, 294, 79, 293, 80, 293, 91, 294, 92, 294, 94, 295, 95, 301, 95, 302, 94, 302, 89, 303, 88, 303, 80, 302, 79, 302, 78, 300, 78, 299, 77, 299, 76, 298, 75], [523, 73, 522, 74, 521, 74, 519, 76, 519, 79, 520, 80, 525, 80, 526, 79, 527, 79, 527, 75, 525, 73], [335, 71, 333, 73, 333, 81, 334, 82, 334, 83, 335, 84, 340, 84, 342, 82, 342, 73, 340, 71]], 'Worn_Corner': [[598, 1029, 597, 1030, 597, 1031, 595, 1033, 595, 1035, 593, 1037, 593, 1038, 590, 1041, 590, 1043, 589, 1044, 589, 1045, 588, 1046, 588, 1048, 587, 1049, 587, 1051, 584, 1054, 584, 1058, 583, 1059, 583, 1061, 582, 1062, 582, 1065, 581, 1066, 580, 1065, 578, 1065, 577, 1066, 577, 1069, 581, 1069, 581, 1067, 582, 1066, 586, 1066, 587, 1065, 588, 1065, 589, 1064, 590, 1064, 592, 1062, 592, 1061, 594, 1059, 594, 1058, 595, 1057, 595, 1056, 596, 1055, 596, 1054, 597, 1053, 597, 1051, 598, 1050, 598, 1048, 599, 1047, 599, 1043, 600, 1042, 600, 1034, 601, 1033, 601, 1030, 600, 1029]], 'Worn_Edge': [[299, 1080, 298, 1081, 297, 1081, 297, 1084, 298, 1085, 304, 1085, 306, 1087, 309, 1087, 311, 1089, 312, 1089, 313, 1090, 395, 1090, 395, 1088, 396, 1087, 397, 1088, 397, 1089, 407, 1089, 409, 1087, 412, 1087, 413, 1088, 413, 1089, 415, 1089, 415, 1086, 414, 1085, 407, 1085, 406, 1086, 404, 1086, 401, 1083, 398, 1083, 396, 1085, 383, 1085, 381, 1083, 317, 1083, 316, 1082, 315, 1082, 314, 1081, 305, 1081, 304, 1080], [251, 850, 250, 851, 250, 958, 251, 959, 251, 992, 252, 993, 252, 1014, 253, 1015, 253, 1023, 254, 1024, 254, 1025, 255, 1026, 255, 1030, 256, 1031, 260, 1031, 260, 1010, 261, 1009, 261, 993, 260, 992, 260, 948, 261, 947, 261, 937, 260, 936, 260, 924, 259, 923, 259, 911, 258, 910, 258, 904, 257, 903, 257, 893, 256, 892, 256, 888, 255, 887, 255, 869, 253, 869, 252, 868, 252, 866, 253, 865, 254, 865, 254, 851, 253, 850], [588, 714, 587, 715, 587, 768, 588, 769, 588, 801, 589, 802, 589, 830, 590, 831, 590, 869, 591, 870, 591, 873, 592, 874, 592, 891, 593, 892, 593, 902, 594, 903, 594, 933, 595, 934, 595, 950, 594, 951, 594, 994, 595, 995, 595, 1005, 596, 1006, 596, 1009, 597, 1010, 597, 1015, 601, 1015, 601, 1009, 600, 1009, 598, 1007, 599, 1006, 600, 1006, 600, 995, 601, 994, 601, 958, 600, 957, 600, 932, 599, 931, 599, 885, 598, 884, 598, 873, 597, 872, 597, 831, 596, 830, 596, 816, 595, 815, 595, 803, 594, 802, 594, 765, 593, 764, 593, 757, 592, 756, 592, 731, 590, 731, 589, 730, 590, 729, 591, 729, 591, 715, 590, 714], [587, 693, 586, 694, 586, 700, 590, 700, 590, 694, 589, 693], [581, 553, 580, 554, 580, 571, 581, 572, 581, 584, 582, 585, 582, 617, 583, 618, 583, 625, 584, 626, 584, 632, 583, 633, 583, 640, 584, 641, 584, 670, 585, 671, 585, 674, 584, 675, 584, 678, 585, 679, 585, 689, 586, 690, 589, 690, 589, 688, 588, 688, 587, 687, 587, 680, 588, 679, 589, 679, 589, 662, 587, 662, 586, 661, 587, 660, 588, 660, 588, 640, 587, 640, 585, 638, 585, 635, 587, 633, 588, 633, 588, 625, 587, 625, 585, 623, 585, 619, 586, 618, 587, 618, 587, 575, 586, 574, 586, 568, 585, 567, 585, 554, 584, 553], [580, 528, 579, 529, 579, 536, 583, 536, 583, 529, 582, 528], [580, 521, 579, 522, 579, 526, 583, 526, 583, 522, 582, 521], [424, 447, 423, 448, 423, 451, 425, 451, 425, 450, 426, 449, 438, 449, 439, 450, 439, 451, 442, 451, 442, 450, 443, 449, 450, 449, 451, 450, 451, 451, 453, 451, 453, 448, 452, 447], [293, 447, 292, 448, 292, 452, 294, 454, 299, 454, 299, 448, 298, 447], [349, 444, 347, 446, 347, 448, 348, 449, 358, 449, 358, 445, 357, 445, 356, 444], [529, 442, 528, 443, 528, 446, 530, 446, 530, 445, 531, 444, 532, 445, 532, 446, 534, 446, 534, 443, 533, 442], [512, 442, 510, 444, 507, 444, 506, 445, 498, 445, 497, 446, 497, 448, 498, 449, 516, 449, 517, 448, 520, 448, 522, 446, 524, 446, 524, 443, 523, 442], [327, 442, 325, 444, 312, 444, 311, 445, 309, 445, 308, 446, 308, 448, 309, 449, 314, 449, 316, 451, 330, 451, 332, 449, 342, 449, 342, 445, 339, 442]], 'Crease': [[0, 1308, 0, 1312, 2, 1312, 3, 1311, 3, 1309, 2, 1308], [851, 1236, 851, 1308, 850, 1309, 850, 1311, 851, 1312, 853, 1312, 853, 1236], [851, 1198, 851, 1220, 853, 1220, 853, 1198], [851, 1165, 851, 1189, 853, 1189, 853, 1165], [851, 1128, 851, 1163, 853, 1163, 853, 1128], [851, 1100, 851, 1119, 853, 1119, 853, 1100], [851, 1085, 851, 1096, 853, 1096, 853, 1085], [851, 1065, 851, 1080, 853, 1080, 853, 1065], [851, 1029, 851, 1037, 853, 1037, 853, 1029], [851, 1013, 851, 1024, 853, 1024, 853, 1013], [851, 980, 851, 1003, 853, 1003, 853, 980], [851, 968, 851, 973, 853, 973, 853, 968], [851, 942, 851, 962, 853, 962, 853, 942], [851, 909, 851, 937, 853, 937, 853, 909], [851, 842, 851, 901, 853, 901, 853, 842], [851, 790, 851, 837, 853, 837, 853, 790], [851, 742, 851, 778, 853, 778, 853, 742], [851, 724, 851, 737, 853, 737, 853, 724], [851, 711, 851, 716, 853, 716, 853, 711], [851, 678, 851, 706, 853, 706, 853, 678], [851, 634, 851, 675, 853, 675, 853, 634], [851, 585, 851, 626, 853, 626, 853, 585], [851, 547, 851, 578, 853, 578, 853, 547], [851, 503, 851, 540, 853, 540, 853, 503], [851, 475, 851, 491, 853, 491, 853, 475], [851, 439, 851, 468, 853, 468, 853, 439], [851, 377, 851, 437, 853, 437, 853, 377], [851, 272, 851, 375, 853, 375, 853, 272], [851, 206, 851, 268, 853, 268, 853, 206], [851, 134, 851, 201, 853, 201, 853, 134], [851, 86, 851, 130, 853, 130, 853, 86], [851, 54, 851, 76, 853, 76, 853, 54], [851, 44, 851, 50, 853, 50, 853, 44], [851, 11, 851, 39, 853, 39, 853, 11], [851, 0, 851, 9, 853, 9, 853, 0]]}",
        "File Upload Status": "completed",
        "Flag": "back",
        "Height": 1313,
        "Left centering": "",
        "Right centering": "",
        "TL_corner": 2,
        "TR_corner": 1,
        "Top centering": "",
        "Width": 854,
        "edge": 8,
        "grade": "1",
        "surface": "8"
    }"""

    val imageProcessedData = Gson().fromJson(frontCardData, FrontCardResponse::class.java)

    fun convertPixelsToDp(context: Context, pixels: Float): Int {
        val screenPixelDensity = context.resources.displayMetrics.density
        val dpValue = pixels / screenPixelDensity
        return dpValue.roundToInt()
    }

}